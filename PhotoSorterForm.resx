<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>12, 6</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBgAAAEACACIBwAAFgAAACgAAAAgAAAAMAAAAAEACAAAAAAAAAMAAAAAAAAAAAAAAAEAAAAA
        AACpxNgAQDtSAF14mABnd4QAGBgmAEtYiQAxNVcAaHR7AHeSwAB8lLEAPklhAEpTfgA4P28Ag5qQABoW
        OQBaaXcAMDA4AFRlcQAsLyoAIik0AISnvQB7mJkAho6QAHOOpQBbZ3UAXWptAG96fAB4jJYAHyI4AFBt
        jwCUpKwAEBMOAIKRkwBKXn8AY26BAJakqwCHlLAAjK7GAB8lPAB3go8AUVxvAIGVoABIc5UAQEBhALCz
        tQB6kqMAfqC4AHODpgBoha8AOzt3AG2RsQClwtYAd4adAGN5ggBuh54AWGBcAKWzuABpfYUARkQ5AI+d
        pQBFPUIAe4mUAIewzABwnLgAX3BxAIy0zgB7kocAgZqyAHmQhQBlcIgAUl54AHB8fABre4EAi5mvAGZ2
        hgCHrMYAgq3LAF9ufwBWg6UAZneNAJm80gBocnEAorrHAD5ShgBxf4EAjLXPAB0gHgBuh6MAh6/KAFlm
        YgBpdXkAVV9oAGN1cwCmt74AUkY2AIKNjACiwNUAbomgAFxzkQCCmKcAi5acAGyIlACIkJkAlLnRAElZ
        bQBRVWEAk56hAI2xygBKPzUAQUxvAHmduQCavdQAXWuPAENPUwCYu9IAQTcsAJCcrwAdHikAhpylAFxj
        ZgA6OEAAbnikAJCltgCGkZsAGxw4AJGirQBebG8Ag5u9AIuyzABTTlMAiKrJAJSptwBjiaAAb4GYAGVy
        cwCao6kAYn2fAKaxsgB6mIIAeJevAIWXlACCpsAAnbbEAFZiiQBfeZkAf4qYAERKegAqLj4AMjMoAGiM
        qQCIsc0Ac527AJy+1ABCOCsAhKq/AGh+lQBZY2sARlFbAJyorAB/lqYAGxVKAFlXVwA4OWEAcXt9AFR5
        nAB3k4AAZnZ8AFpeXwArMVQAVHGIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAJlRkO3aRVh8fHx8SFmpmaqEfHx9soV6ngV6hp6ZIpkBxamZUo1FWHx8fH1ZRamR0ox8fVl5e
        mWyZXl6nAwM5TRaHI1FRWVYfHxJUOVcIf38wkx8SXmyZmXNsc34DJyciO2RqWTdAVhBZig0VCAmCgghw
        VmyZc5mZc3M6QAcDSkqHOz1ZRxk3pYqKpaVHhZEkfzBpbHOUc5mZc6GGA00PETs7PVlEXEelioqKiqWk
        L2Q0CHAQqKigEHOhfk1NOUpNKXYnQFRciqWlioqlX2YWZjIIiDpGAqIOp5wPD001OU0nkRpaWlyKiqUN
        DYpqVIF3d1tmo3AwiKKgKA8RcZNpN0gnXEhZQIqlpYqKR6M3oVlxEqMWPI95DKCoSkoYnQwxpidcXFFR
        ioqlpaVZlBKjcXcSEhJ+NFGhKyZKA5IxMTFmIGSHLIelpaVHQoyUlF86X3iUEysoAVMFbUqSMTExMXtm
        aocsLKWlpR5rUqESo1FUEBKgoKCgoKhPjzGSMQwMZGZkhywsh0c3kH8wQnFPMJCcoKCgoKCgoj05CzEx
        DKIgamSHLCwsh3VtMGJZVC9/fwygogagoKBFkT09kjEMDCc7ZIksLCwspwIwMFtqAoIIDJKIBaCgRnQp
        J5EikjEMZSc9niwsLCxUeXkwSmpTiKRtIQWSaJE4XYMeHkk0DG0/ixtqh56eiVECfwIHnqkcJjZiHQUk
        XYODSXR0Y0kkmz9uLnZ9Ix59J5IwCyl6S26LLlMFU3BDCQljCZ+fFy0dPy6NS1iAlpeWqQphVZZMTEyN
        oh0FIZc/PzIwTk5OpCo/jY0la2dnblByZ2dVlkxMTExoBHyElz8yMjBOTk6kKm6NS2trZ3KNb5iYZ2dV
        VUFMTEwyP5eXPzKVlU5OTioqbo0la2dyUJpvmJhycmdBlj5MTI2Xlz8/MpVOTk5OpCpujSVrZ5hgSzMz
        YG9yZ1WWTExMjZc/Pz8ylU5OTk6kKm4UJWdQYACOAAAzmJhnZz5YTEyNl5c/PzJOTk5OpKQqAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>